package ui;

import data.Board;
import data.Piece;
import data.Player;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.JFileChooser;
import java.io.File; 
import javax.swing.JOptionPane;

public class UISwing extends javax.swing.JFrame implements UI{
    
    private static String messages[]= new String[]{"Opcion no listada","No hay pieza en la posición inicial"
            ,"Se espera valor numerico","Ingrese una coordenada valida, es decir letra y número"
            ,"Coordenedas Incorrectas o fuera del limite","La dirección es incorrecta, debe ingresar solo la dirección de LA CARPETA"
            ,"Coordenadas iguales, intente otra vez","Movimiento no valido"};
    
    public UISwing() {
        try {
            initComponents();
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            SwingUtilities.updateComponentTreeUI(this);
            this.setIconImage(new ImageIcon(getClass().getResource("/resources/gameIcon.png")).getImage());
            this.setTitle("JavaChess");
            this.pack();
            this.setVisible(true);
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(UISwing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 833, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onWinMessage(Player player) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onTieMessage(Player[] player) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void messageStalemate() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onInvalidMoveCheck(Player[] player, int turn) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onCheck(Player[] player, int turn) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void checkMate(Player[] player, int turn) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onQuitGame(Player player) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onError(int msg) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void messageDrawFifty(Player[] player) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void messageDrawKing(Player[] player) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void printBoard(Board board) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    @Override
    
    public String readName(String col) {
        return "nothing";
    }

    @Override
    public Player[] readPlayers() {
        NewGamePanel newGameP=new NewGamePanel();
        this.getContentPane().removeAll();
        this.getContentPane().add(newGameP);
        this.revalidate();
        this.repaint();
        this.pack();
        return newGameP.generatePlayers();
    }
    
    @Override
    public void welcome() {
    }

    @Override
    public int menu() {
        MenuPanel mPanel=new MenuPanel();
        
        this.getContentPane().removeAll();
        this.getContentPane().add(mPanel);
        this.revalidate();
        this.repaint();
        this.pack();
        int opt=mPanel.getChosen();//get choosen from pane
        return opt;
    }

    @Override
    public void printCemetery(Player w, Player b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void whosePlayer(Player player) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String coordinateRead() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public ArrayList<ArrayList<Integer>> inputMove() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Piece askPromotioPiece(boolean color) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int movementOptions() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void showPlayHist(Player[] player) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean overWriteMessage(String fileName) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String saveGameRequest() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String loadGameRequest() {
        JFileChooser fileChoser= new JFileChooser(new File(System.getProperty("user.home")));
        fileChoser.setMultiSelectionEnabled(false);
        fileChoser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int res = fileChoser.showOpenDialog(this);
        if(res==JFileChooser.APPROVE_OPTION){
            String path= fileChoser.getSelectedFile().getAbsolutePath();
            return path;
        }else{
            return "";
        }
    }

    @Override
    public void onSaveSuceed() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onSaveFailure() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onLoadFailure() {
        JOptionPane.showMessageDialog(this, "No se puede cargar la partida\nnueva partida iniciada", "Fallo en carga de archivo!!", JOptionPane.ERROR_MESSAGE);
    }

    @Override
    public void onLoadSuceed() {
        JOptionPane.showMessageDialog(this, "Carga realizada correctamente", "Carga correcta!!", JOptionPane.INFORMATION_MESSAGE);
    }

}
